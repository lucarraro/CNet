[{"path":[]},{"path":"https://lucarraro.github.io/rivnet/articles/traudem.html","id":"what-this-package-does","dir":"Articles","previous_headings":"Scope of traudem","what":"What this package does","title":"traudem","text":"provides guide installation TauDEM dependencies GDAL MPI, depending operating system. checks TauDEM dependencies correctly installed included PATH. provides wrapper commands calling TauDEM methods R.","code":""},{"path":"https://lucarraro.github.io/rivnet/articles/traudem.html","id":"what-this-package-does-not","dir":"Articles","previous_headings":"Scope of traudem","what":"What this package does not","title":"traudem","text":"provide automatic installation TauDEM dependencies. Please refer vignette(\"taudem-installation\") instructions . provide extensive documentation functioning TauDEM commands. Please refer original TauDEM documentation .","code":""},{"path":"https://lucarraro.github.io/rivnet/articles/traudem.html","id":"can-traudem-run-all-taudem-methods","dir":"Articles","previous_headings":"Scope of traudem","what":"Can traudem run all TauDEM methods?","title":"traudem","text":"Yes! TauDEM methods dedicated wrappers like taudem_pitremove(), argument names strove make informative. methods, can use taudem_exec() provide arguments TauDEM CLI expect . make PR repository add dedicated wrappers.","code":""},{"path":"https://lucarraro.github.io/rivnet/articles/traudem.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"traudem","text":"Refer vignette(\"taudem-installation\", package = \"traudem\"). particular, installing TauDEM CLI dependencies well R package, please run traudem::taudem_sitrep(). can install traudem CRAN: can install development version traudem R-universe: GitHub :","code":"traudem::taudem_sitrep() install.packages(\"traudem\") # Enable repository from lucarraro options(   repos = c(     lucarraro = 'https://lucarraro.r-universe.dev',     CRAN = 'https://cloud.r-project.org'   ) ) # Download and install traudem in R install.packages('traudem') # install.packages(\"devtools\") devtools::install_github(\"lucarraro/traudem\")"},{"path":"https://lucarraro.github.io/rivnet/articles/traudem.html","id":"simple-example","dir":"Articles","previous_headings":"","what":"Simple example","title":"traudem","text":"use traudem launch TauDEM’s PitRemove: ran example temporary directory withr automatically deletes. want automatically get rid intermediary files created TauDEM one pipelines, might interested withr::local_tempfile(). wanted run code without seeing messages TauDEM, can either use quiet argument: set traudem.quiet option (options(traudem.quiet = TRUE) just session, withr::local_options(traudem.quiet = TRUE)):","code":"library(traudem) test_dir <- withr::local_tempdir() fs::file_copy(   system.file(\"test-data\", \"DEM.tif\", package = \"traudem\"),   file.path(test_dir, \"DEM.tif\") ) output <- taudem_pitremove(file.path(test_dir, \"DEM.tif\")) #> PitRemove version 5.3.9 #> Input file /tmp/Rtmp64HAv3/filefc9c38806e1b/DEM.tif has projected coordinate system. #> Nodata value input to create partition from file: nan #> Nodata value recast to float used in partition raster: nan #> Processes: 1 #> Header read time: 0.002983 #> Data read time: 0.001157 #> Compute time: 0.016390 #> Write time: 0.001719 #> Total time: 0.022249 #> This run may take on the order of 1 minutes to complete. #> This estimate is very approximate.  #> Run time is highly uncertain as it depends on the complexity of the input data  #> and speed and memory of the computer. This estimate is based on our testing on  #> a dual quad core Dell Xeon E5405 2.0GHz PC with 16GB RAM. output #> [1] \"/tmp/Rtmp64HAv3/filefc9c38806e1b/DEMfel.tif\" test_dir <- withr::local_tempdir() fs::file_copy(   system.file(\"test-data\", \"DEM.tif\", package = \"traudem\"),   file.path(test_dir, \"DEM.tif\") ) output <- taudem_pitremove(file.path(test_dir, \"DEM.tif\"), quiet = TRUE) output #> [1] \"/tmp/Rtmp64HAv3/filefc9c7b85bbf2/DEMfel.tif\" withr::local_options(traudem.quiet = TRUE) test_dir <- withr::local_tempdir() fs::file_copy(   system.file(\"test-data\", \"DEM.tif\", package = \"traudem\"),   file.path(test_dir, \"DEM.tif\") ) output <- taudem_pitremove(file.path(test_dir, \"DEM.tif\")) output #> [1] \"/tmp/Rtmp64HAv3/filefc9c2c87ac26/DEMfel.tif\""},{"path":"https://lucarraro.github.io/rivnet/articles/traudem.html","id":"full-example-download-dem-data-and-extract-a-river-network","dir":"Articles","previous_headings":"","what":"Full example: download DEM data and extract a river network","title":"traudem","text":"traudem can used combination R-package elevatr extract river network elevation data retrieved web. following example shows derive contour catchment drainage area values cells within contour using D8 flow direction algorithm. required inputs : coordinates catchment outlet; coordinates lower-left top-right corners rectangular area containing catchment interest; EPSG code corresponding projection used express coordinate data (see also https://epsg.org/home.html); zoom level DEM data extracted (see elevatr documentation).   total area extracted catchment 364 km2.","code":"library(elevatr) library(sf) #> Linking to GEOS 3.8.0, GDAL 3.0.4, PROJ 6.3.1; sf_use_s2() is TRUE library(terra) #> terra 1.6.17 library(traudem) library(shapefiles) #> Loading required package: foreign #>  #> Attaching package: 'shapefiles' #> The following objects are masked from 'package:foreign': #>  #>     read.dbf, write.dbf library(withr)  taudem_sitrep() # verify that TauDEM is correctly installed  #> ✔ Found GDAL version 3.0.4. #> ✔ Found mpiexec (OpenRTE) 4.0.3 (MPI). #> ✔ Found TauDEM path (/usr/local/taudem). #> ✔ Found TauDEM executables directory (/usr/local/taudem). #> ✔ Found all TauDEM executables. #> ℹ Testing TauDEM on an example file (please wait a bit)... #> ── TauDEM output ──────────────────────────────────────────────────────────────────── #> PitRemove version 5.3.9 #> Input file DEM.tif has projected coordinate system. #> Nodata value input to create partition from file: nan #> Nodata value recast to float used in partition raster: nan #> Processes: 1 #> Header read time: 0.002094 #> Data read time: 0.000788 #> Compute time: 0.013749 #> Write time: 0.001609 #> Total time: 0.018240 #> This run may take on the order of 1 minutes to complete. #> This estimate is very approximate.  #> Run time is highly uncertain as it depends on the complexity of the input data  #> and speed and memory of the computer. This estimate is based on our testing on  #> a dual quad core Dell Xeon E5405 2.0GHz PC with 16GB RAM. #> ── End of TauDEM output ───────────────────────────────────────────────────────────── #> ✔ Was able to launch a TauDEM example! #> ! Double-check above output for serious error messages.  test_dir <- local_tempdir() # temporary directory storing intermediary files created by TauDEM  # Input data for the river Wigger (central Switzerland) EPSG <- 21781   # EPSG code corresponding to CH1903 (Swiss projected coordinate system)  x_outlet <- 637478 # outlet x coordinate in CH1903 coordinates y_outlet <- 237413 # outlet y coordinate in CH1903 coordinates x_ll <- 620000 # x coordinate of the lower-left (SW) limit of the region x_tr <- 660000 # x coordinate of the top-right (NE) limit of the region  y_ll <- 200000 # y coordinate of the lower-left (SW) limit of the region     y_tr <- 250000 # y coordinate of the top-right (NE) limit of the region zoom <- 9 # corresponds to cellsize ~= 100 m at the latitude of interest  # use elevatr to download DEM  loc.df <- data.frame(x=c(x_ll, x_tr), y=c(y_ll,y_tr)) r <- rast() crs(r) <- paste0(\"epsg:\", EPSG) crs_str <- crs(r)  z <- get_elev_raster(locations = loc.df, prj = crs_str, z = zoom, verbose = F)  #> Warning in showSRID(SRS_string, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): PROJ/GDAL PROJ string degradation in workflow #>  repeated warnings suppressed #>  Discarded datum CH1903 in Proj4 definition #>  #>  Accessing raster elevation [-------------------------]   0%  Accessing raster elevation [=====>-------------------]  25%  Accessing raster elevation [===========>-------------]  50%  Accessing raster elevation [==================>------]  75%  Accessing raster elevation [=========================] 100% #> Mosaicing & Projecting z <- rast(z) z <- crop(z, ext(x_ll, x_tr, y_ll, y_tr)) # reclassify: all pixels with elev=NA are set to 0. Then the pit remove algorithm will take care of them z <- classify(z, matrix(c(NA, NA, 0), 1, 3))   writeRaster(z, filename = file.path(test_dir, \"DEM.tif\")) # write elevation raster to temporary directory  # apply TauDEM functions # Remove pits out_fel <- taudem_pitremove(file.path(test_dir, \"DEM.tif\"), quiet = TRUE)  # D8 flow directions out_p <- taudem_d8flowdir(out_fel, quiet = TRUE) out_p <- out_p$output_d8flowdir_grid # file path of flow direction file  # Contributing area out_ad8 <- taudem_aread8(out_p, quiet = TRUE)  # Threshold out_src <- taudem_threshold(out_ad8, quiet = TRUE)  # create shapefile with approximate outlet location shp.point <- function(x, y, sname = \"shape\"){ # function to create point shapefile given coordinates    n <- length(x)   dd <- data.frame(Id = 1:n, X = x, Y = y)   ddTable <- data.frame(Id = c(1), Name = paste(\"Outlet\", 1:n, sep = \"\"))   ddShapefile <- convert.to.shapefile(dd, ddTable, \"Id\", 1)   write.shapefile(ddShapefile, sname, arcgis = T)   invisible(paste0(sname,\".shp\")) }  out_shp <-  shp.point(x_outlet, y_outlet, file.path(test_dir, \"ApproxOutlet\"))  # Move outlet to stream out_moved.shp <- taudem_moveoutletstostream(out_p, out_src, outlet_file = out_shp,                                              output_moved_outlets_file = file.path(test_dir, \"Outlet.shp\"),                                              quiet = TRUE)  # Contributing area upstream of outlet out_ssa <- taudem_aread8(out_p, outlet_file = out_moved.shp, quiet = TRUE)  # Derive catchment contour ssa <- rast(out_ssa) # reclassify: pixels within the catchment have value 1, others 0 ssa_cont <- classify(ssa, matrix(c(NA, NA, 0, 1, Inf, 1), 2, 3, byrow = T))   # plot DEM of the region and catchment contours plot(z, col = terrain.colors(1000), range = c(0,1200)) contour(ssa_cont, add = T, labels = \"\")  title(\"DEM and catchment contour\") # plot map of drainage area within the catchment plot(ssa, col = hcl.colors(1000, \"viridis\")) title(\"Drainage area [no. cells]\") # total catchment area  ssa_log <- ssa values(ssa_log) <- log10(values(ssa)) plot(ssa_log, col = hcl.colors(1000, \"viridis\")) title(\"Drainage area [log10(no. cells)]\") cellsize <- sqrt(prod(res(z))) # cellsize is geometric mean of downloaded raster resolution  max(values(ssa),na.rm=T)*cellsize^2 # total catchment area in m^2 #> [1] 363822337"},{"path":"https://lucarraro.github.io/rivnet/articles/traudem.html","id":"what-should-i-do-if-i-do-not-retrieve-the-desired-catchment","dir":"Articles","previous_headings":"","what":"What should I do if I do not retrieve the desired catchment?","title":"traudem","text":"might happen , even coordinates catchment outlet precisely attributed, obtained catchment shape desired one (particular, much smaller sought one). might due issues determining correct outlet position extracted river network. fact, outlet position moved downslope initial, user-specified location (x_outlet, y_outlet) closest stream cell via function taudem_moveoutletstostream. Depending terrain topography DEM resolution, extracted river network might overlap exactly real river networks, hence possible errors. solve issue, suggested : Slightly change coordinates x_outlet, y_outlet, better align input outlet location extracted stream cells. Change argument threshold_parameter taudem_threshold. Stream cells defined cells drainage area smaller threshold_parameter (expressed number cells). threshold_parameter large, actual outlet location moved far away downstream direction; small, actual outlet location moved enough downstream direction.","code":""},{"path":"https://lucarraro.github.io/rivnet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Luca Carraro. Maintainer.","code":""},{"path":"https://lucarraro.github.io/rivnet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Carraro L (2023). rivnet: Extract Analyze Rivers Elevation Data. R package version 0.1.0, https://lucarraro.github.io/rivnet/.","code":"@Manual{,   title = {rivnet: Extract And Analyze Rivers From Elevation Data},   author = {Luca Carraro},   year = {2023},   note = {R package version 0.1.0},   url = {https://lucarraro.github.io/rivnet/}, }"},{"path":"https://lucarraro.github.io/rivnet/index.html","id":"rivnet","dir":"","previous_headings":"","what":"Extract And Analyze Rivers From Elevation Data ","title":"Extract And Analyze Rivers From Elevation Data ","text":"R-package allowing seamless extraction river networks Digital Elevation Models data.","code":""},{"path":"https://lucarraro.github.io/rivnet/index.html","id":"what-this-package-does","dir":"","previous_headings":"","what":"What this package does","title":"Extract And Analyze Rivers From Elevation Data ","text":"Analysis Digital Elevation Models, either provided externally downloaded open source repositories (latter case, interfacing elevatr package). Extraction river networks performed via TauDEM’s D8 flow direction algorithm (interfacing traudem package). Resulting river networks compatible functions OCNet package, can plotted analyzed accordingly (thus also compatible packages igraph SSN). Distances, areas, subcatchments, slopes can computed. obtained river networks can used hydrological ecological modelling studies.","code":""},{"path":"https://lucarraro.github.io/rivnet/index.html","id":"a-minimal-working-example","dir":"","previous_headings":"","what":"A minimal working example","title":"Extract And Analyze Rivers From Elevation Data ","text":"Extract river Wigger (Switzerland) externally provided DEM raster file. Outlet coordinates CH1903/LV03 projected coordinate system (.e., DEM file): result can obtained downloading DEM data via elevatr:","code":"fp <- system.file(\"extdata/wigger.tif\", package = \"rivers\")  r <- extract_river(outlet = c(637478, 237413),                       DEM = fp) r <- extract_river(outlet = c(637478, 237413),                       EPSG = 21781, #CH1903/LV03 coordinate system                       ext = c(6.2e5, 6.6e5, 2e5, 2.5e5),                       z = 8)"},{"path":"https://lucarraro.github.io/rivnet/index.html","id":"installation-issues","dir":"","previous_headings":"","what":"Installation issues","title":"Extract And Analyze Rivers From Elevation Data ","text":"rivnet depends traudem, whose installation might require caution depending operating system. Please read documentation carefully.","code":""},{"path":"https://lucarraro.github.io/rivnet/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Extract And Analyze Rivers From Elevation Data ","text":"Luca Carraro (maintainer)","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/aggregate_river.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate a river — aggregate_river","title":"Aggregate a river — aggregate_river","text":"Aggregates river","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/aggregate_river.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate a river — aggregate_river","text":"","code":"aggregate_river(river, ...)"},{"path":"https://lucarraro.github.io/rivnet/reference/aggregate_river.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate a river — aggregate_river","text":"river river object. ... arguments passed aggregate_OCN.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/aggregate_river.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate a river — aggregate_river","text":"alias aggregate_OCN.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/aggregate_river.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate a river — aggregate_river","text":"","code":"# \\donttest{  fp <- system.file(\"extdata/wigger.tif\", package=\"rivnet\")  r <- extract_river(outlet=c(637478,237413),   DEM=fp) #> Error in taudem_exec(n_processes = n_processes, program = \"pitremove\",     args = args, quiet = quiet): ✖ Can't find TauDEM #> ℹ Refer to ?traudem::taudem_sitrep r <- aggregate_river(r)   #> Warning: RGL: unable to open X11 display #> Warning: 'rgl.init' failed, running with 'rgl.useNULL = TRUE'. #> Error in \"slope\" %in% names(OCN$FD): object 'r' not found # }"},{"path":"https://lucarraro.github.io/rivnet/reference/covariate_river.html","id":null,"dir":"Reference","previous_headings":"","what":"Attribute covariates to nodes of a river network — covariate_river","title":"Attribute covariates to nodes of a river network — covariate_river","text":"Attributes covariate values raster files subcatchments river network. local upstream-averaged  covariate values calculated.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/covariate_river.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribute covariates to nodes of a river network — covariate_river","text":"","code":"covariate_river(x, river, categorical = TRUE)"},{"path":"https://lucarraro.github.io/rivnet/reference/covariate_river.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attribute covariates to nodes of a river network — covariate_river","text":"x SpatRaster object (obtained via rast) containing categorical continuous variables covariates computed. coordinate system must river. Consider using terra::project change coordinate system. river River object. must aggregated (via aggregate_river). categorical Logical. covariate categorical (e.g. land cover classes)? x consists several layers, possible specify categorical vector logicals (one per layer); alternatively,  single value categorical applied layers x.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/covariate_river.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attribute covariates to nodes of a river network — covariate_river","text":"river object. following elements added: SC$locCov Data frame covariates evaluated local values subcatchment (.e., mean covariate value within catchment). SC$upsCov Data frame covariates evaluated upstream-averaged values subcatchment (.e., mean  covariate value within area upstream given subcatchment, including subcatchment ).","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/covariate_river.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Attribute covariates to nodes of a river network — covariate_river","text":"categorical = TRUE, number columns SC$locCov, SC$upsCov equal number  unique values x within catchment. Column names composed \"y_z\",  y = names(x)  z unique values x. Values correspond fraction pixels (FD nodes) within local/upstream area covered given category (e.g., land cover type). categorical = FALSE, SC$locCov SC$upsCov single column named names(x). Values  correspond mean covariate value within local/upstream reference area. x multiple layers, columns data frames added sequentially. occurs covariate_river run repeated times (instance, compute covariates one SpatRaster object time).","code":""},{"path":[]},{"path":"https://lucarraro.github.io/rivnet/reference/covariate_river.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attribute covariates to nodes of a river network — covariate_river","text":"","code":"# \\donttest{   fp <- system.file(\"extdata/wigger.tif\", package=\"rivnet\") river <- extract_river(outlet=c(637478,237413),                        DEM=fp) #> Error in taudem_exec(n_processes = n_processes, program = \"pitremove\",     args = args, quiet = quiet): ✖ Can't find TauDEM #> ℹ Refer to ?traudem::taudem_sitrep river <- aggregate_river(river) #> Error in \"slope\" %in% names(OCN$FD): object 'river' not found  # land cover raster file (categorical) r1 <- terra::rast(system.file(\"extdata/landcover.tif\", package=\"rivnet\"))  # legend: 1-urban; 2-agriculture; 3-forest; 4-improductive  river <- covariate_river(r1, river) #> Error in \"RN\" %in% names(river): object 'river' not found  plot(river$SC$locCov[ , 1], river) # fraction of urban area within a subcatchment #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'river' not found plot(river$SC$upsCov[ , 1], river) # fraction of upstream-averaged urban area   #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'river' not found   # mean air temperature raster file (continuous)  r2 <- terra::rast(system.file(\"extdata/temperature.tif\", package=\"rivnet\"))  river <- covariate_river(r2, river, categorical = FALSE) #> Error in \"RN\" %in% names(river): object 'river' not found  plot(river$SC$locCov[, 5], river) # the layer has been added after the 4 previous ones #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'river' not found   names(river$SC$locCov)  #> Error in eval(expr, envir, enclos): object 'river' not found    # }"},{"path":"https://lucarraro.github.io/rivnet/reference/extract_river.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a river — extract_river","title":"Extract a river — extract_river","text":"Function extracts river network elevation data via TauDEM's D8 flow direction  algorithm. can return river object /output TauDEM functions raster file. Elevation data can either downloaded web provided externally.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/extract_river.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a river — extract_river","text":"","code":"extract_river(outlet, EPSG=NULL, ext=NULL, z=NULL, DEM=NULL,    as.river=TRUE, as.rast=FALSE, filename=NULL, plot.rast=FALSE,   threshold_parameter=1000, n_processes=1, quiet=TRUE, src=\"aws\")"},{"path":"https://lucarraro.github.io/rivnet/reference/extract_river.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a river — extract_river","text":"outlet vector, matrix data frame expressing coordinates river outlet(s)  (coordinate system identified EPSG, DEM, latter provided). vector, odd components identify longitudinal (x) coordinates,  even components latitudinal (y) coordinates. matrix, 2 columns (x  y coordinates respectively) number rows equal number outlets. data frame,  components outlet$x, outlet$y identifying respective coordinates. EPSG EPSG code identifying coordinate system used. See https://epsg.org/.  required DEM specified, used otherwise. recommended use projected coordinate systems, lengths areas river object metric units. ext Vector expressing extent region elevation data downloaded. must form c(xmin, xmax, ymin, ymax). Coordinates must expressed coordinate system identified EPSG. required DEM specified,  used otherwise. z Zoom level elevation data downloaded. See get_elev_raster  details. required DEM specified, used otherwise. DEM Filename Digital Elevation Model raster file used. .river Logical. river object created? .rast Logical. raster file containing results traudem functions output created? filename Filename raster file produced .rast=TRUE. required  .rast=TRUE. can single filename, four filenames, case four different  raster files produced. See Details. plot.rast Logical. plot calculated contributing area extracted catchment  contour produced? threshold_parameter Value passed taudem_threshold. See example `traudem`  documentation details. n_processes Value passed traudem functions. quiet Logical. FALSE console output suppressed. src Value passed get_elev_raster.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/extract_river.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a river — extract_river","text":"river object. See create_OCN, landscape_OCN description structure.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/extract_river.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract a river — extract_river","text":"wrapper elevatr traudem functions, allowing seamless extraction  river networks elevation data. output river object compatible OCNet functions  (equivalent OCN produced landscape_OCN). workflow TauDEM commands used follows:  PitRemove -> D8FlowDir -> D8ContributingArea -> StreamDefByThreshold ->    MoveOutletsToStreams -> D8ContributingArea.  See https://hydrology.usu.edu/taudem/taudem5/index.html details TauDEM. .rast = TRUE, raster file returned. consists four layers: fel pit-filled elevation data p D8 flow directions ad8 contributing area whole region ssa contributing area respect outlet(s) used raster file written via terra::writeRaster. nested outlets specified, function ignores upstream outlet.","code":""},{"path":[]},{"path":"https://lucarraro.github.io/rivnet/reference/extract_river.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a river — extract_river","text":"","code":"# extract the river Wigger (Switzerland) from DEM raster file # outlet coordinates are expressed in the CH1903/LV03 coordinate system  # (i.e. same as the DEM file)  fp <- system.file(\"extdata/wigger.tif\", package=\"rivnet\")  r <- extract_river(outlet=c(637478,237413),    DEM=fp) #> Error in taudem_exec(n_processes = n_processes, program = \"pitremove\",     args = args, quiet = quiet): ✖ Can't find TauDEM #> ℹ Refer to ?traudem::taudem_sitrep r #> Error in eval(expr, envir, enclos): object 'r' not found     # \\donttest{ # same as above but download DEM data via elevatr r <- extract_river(outlet=c(637478,237413),   EPSG=21781, #CH1903/LV03 coordinate system   ext=c(6.2e5,6.6e5,2e5,2.5e5),   z=8) #> Warning: PROJ/GDAL PROJ string degradation in workflow #>  repeated warnings suppressed #>  Discarded datum CH1903 in Proj4 definition #> Warning: PROJ support is provided by the sf and terra packages among others #> Warning: PROJ support is provided by the sf and terra packages among others #> Error in loadNamespace(x): there is no package called ‘progress’ # }  if (FALSE) { # enhance resolution by increasing zoom r2 <- extract_river(outlet=c(637478,237413),   EPSG=21781, #CH1903/LV03 coordinate system   ext=c(6.2e5,6.6e5,2e5,2.5e5),   z=9) plot(r) plot(r2) }  if (FALSE) { # specify two outlets as a data frame (this takes some minutes) r <- extract_river(outlet=data.frame(x=c(637478,629532),y=c(237413,233782)),                     EPSG=21781, #CH1903/LV03 coordinate system                     ext=c(6.2e5,6.6e5,2e5,2.5e5),                     z=10, plot.rast=T) plot(r)  r <- aggregate_river(r) plot(r, chooseCM = 2)  # display only the second catchment  # (i.e. that identified by the second outlet) }  if (FALSE) { # effect of threshold_parameter r <- extract_river(outlet = c(637478, 237413),                     EPSG = 21781, #CH1903/LV03 coordinate system                     ext = c(6.2e5, 6.6e5, 2e5, 2.5e5),                     z = 8, threshold_parameter = 50,             plot.rast = TRUE) plot(r) # if threshold_parameter is too small, the outlet might be located  # in a smaller river reach, and the extracted river network would be too small # plot.rast = TRUE can help identify what is going on  r <- extract_river(outlet = c(637478, 237413),                     EPSG = 21781, #CH1903/LV03 coordinate system                     ext = c(6.2e5, 6.6e5, 2e5, 2.5e5),                     z = 8, threshold_parameter = 1e5,             plot.rast = TRUE) plot(r) # if threshold_parameter is too large, the outlet pixel might not be # located at all (for instance, in this case no cells have contributing area  # above threshold_parameter), hence throwing an error }"},{"path":"https://lucarraro.github.io/rivnet/reference/hydro_river.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign hydraulic variables to a river network — hydro_river","title":"Assign hydraulic variables to a river network — hydro_river","text":"Assign hydraulic variables (width, water depth, discharge, water velocity, ...) across river network measured values based  scaling relationships /uniform flow equations.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/hydro_river.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign hydraulic variables to a river network — hydro_river","text":"","code":"hydro_river(x, river, level = \"AG\", leopold = TRUE,  expWidth = 0.5, expDepth = 0.4, expQ = 1,  crossSection = \"natural\", ks = 30, minSlope = NULL)"},{"path":"https://lucarraro.github.io/rivnet/reference/hydro_river.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign hydraulic variables to a river network — hydro_river","text":"x Data frame containing measured hydraulic variables. must consist columns data (numeric values width m, depth m discharge m^3 s^(-1)), type (containing variable type: width (\"w\"), depth (\"d\") discharge (\"Q\")), type (ID AG RN nodes data measured). See details. river River object. must aggregated (via aggregate_river). level Aggregation level nodes x$node defined hydraulic variables calculated. Possible values \"RN\", \"AG\". See OCNet details. leopold Logical. scaling relationships hydraulic variables drainage area (spirit Leopold Maddock, 1953) preferred uniform flow (Gauchler-Strickler/Manning) relationships? See details. expWidth Exponent scaling relationship width drainage area. See details. expDepth Exponent scaling relationship depth drainage area. See details. expQ Exponent scaling relationship discharge drainage area. See details. crossSection Shape river cross-section (constant across river network). Possible values \"rectangular\", \"natural\", numeric value indicating exponent width-depth relationship. See details. ks Roughness coefficient according Gauchler-Strickler (m^(1/3)s^(-1)). inverse Manning's roughness coefficient. can single value (thus assumed constant whole river network), vector length equal number nodes specified level (one roughness coefficient value corresponding node). minSlope Minimum slope value, replacing null NaN values slope river object. NULL, assumed equal either river$slope0 (river OCN) minimum positive slope value selected level.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/hydro_river.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign hydraulic variables to a river network — hydro_river","text":"river object. following elements added list indicated level: width, depth, discharge Values assigned nodes (see Details). Units m, m, m^3 s^(-1), respectively. velocity Values m s^(-1). Calculated continuity (.e., ratio discharge cross-sectional area). volume Values m^3. Calculated cross-sectional area times length. hydraulicRadius Values m. Calculated ratio cross-sectional area wetted perimeter. shearStress Values N m^(-2). Shear stress exerted streambed waterflow. Calculated gamma*hydraulicRadius*slope, gamma = 9806 N m^(-3) specific weight water.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/hydro_river.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assign hydraulic variables to a river network — hydro_river","text":"function complete version rivergeometry_OCN. x must consist least one width value one value either depth discharge. values included x$data must referred time point, spatial interpolation can performed. goal assessing spatio-temporal changes hydraulic variables, hydro_river must run independently time point. node, one specify multiple values variable type. Function locate_site can used attribute x$node. level = \"AG\", drainage area values used power law relationships calculated 0.5*(river$AG$+ river$AG$AReach). level = \"RN\", river$RN$used. Width values x assumed measured water surface. single width value provided, widths calculated nodes power-law relationship drainage area exponent expWidth width measured node equal provided value. multiple values width provided, function fits width-drainage area power law provided values. case, expWidth used output (fitted) width values measured nodes generally different observed ones. Depending type depth discharge data x, function behaves eight different ways: one depth value zero discharge values provided, Gauchler-Strickler uniform flow relationship (hereafter GS) applied find discharge node depth measured. Discharge values attributed nodes based power-law relationship vs. drainage area (hereafter PL) exponent expQ. Finally, depth values nodes derived GS. one discharge value zero depth values provided, discharge values attributed nodes based PL exponent expQ, value measurement node equal observed one. Depth values nodes derived GS. one discharge one depth value provided (necessarily referred node), discharge values first attributed case 2. leopold = TRUE, depth values derived PL exponent expDepth; conversely, GS applied. multiple values discharge zero values depth provided, discharge values attributed power-law fit measured values vs. drainage area (heareafter PLF). Depth values obtained GS. multiple values depth zero values discharge provided, depth values obtained PLF. Discharge values calculated GS. multiple values discharge one value depth provided, discharge values first computed case 4. Depth values obtained either PF exponent expDepth (leopold = TRUE), alternatively via GS. multiple values depth one value discharge provided, depth values first computed case 5. Discharge values obtained case 2 (leopold = TRUE), alternatively computed GS. multiple values discharge depth provided, discharge values computed case 4, depth values computed case 5. Cross-sections assumed vertically symmetric. crossSection = \"natural\", relationship width depth cross-section expressed width ~ depth^0.65, suggested Leopold Maddock (1953) (width ~ discharge^0.26 depth ~ discharge^0.4). Assuming crossSection = 0 equivalent \"rectangular\" (width depend depth), crossSection = 1 corresponds isosceles triangular cross-section.","code":""},{"path":[]},{"path":"https://lucarraro.github.io/rivnet/reference/hydro_river.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign hydraulic variables to a river network — hydro_river","text":"","code":"# \\donttest{   fp <- system.file(\"extdata/wigger.tif\", package=\"rivnet\") river <- extract_river(outlet=c(637478,237413),                        DEM=fp) #> Error in taudem_exec(n_processes = n_processes, program = \"pitremove\",     args = args, quiet = quiet): ✖ Can't find TauDEM #> ℹ Refer to ?traudem::taudem_sitrep river <- aggregate_river(river) #> Error in \"slope\" %in% names(OCN$FD): object 'river' not found  data <- c(12.8,  6.7,  3.3,  1.1,  9.5,  0.8) type <- c(\"w\",   \"w\",  \"w\",  \"w\",  \"Q\",  \"d\") node <- c( 46,   109,  181,  145,   46,   46) # assume these have been found via locate_site  x <- data.frame(data=data, type=type, node=node)  river1 <- hydro_river(x, river) # case 3 #> Error in \"RN\" %in% names(river): object 'river' not found river2 <- hydro_river(x, river, leopold = FALSE) # case 3 (depth calculated via GS) #> Error in \"RN\" %in% names(river): object 'river' not found  plot(0.5*(river1$AG$A + river1$AG$AReach), river1$AG$depth) # Power law with exponent 0.4 #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'river1' not found plot(0.5*(river2$AG$A + river2$AG$AReach),    river2$AG$depth) # Higher depths in reaches with small slope #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'river2' not found  river3 <- hydro_river(x, river, leopold = FALSE, minSlope = 0.002) #> Error in \"RN\" %in% names(river): object 'river' not found plot(0.5*(river1$AG$A + river1$AG$AReach), river1$AG$depth) # Variability is reduced #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'river1' not found  river <- hydro_river(x[-5, ], river) # case 1 #> Error in \"RN\" %in% names(river): object 'river' not found river <- hydro_river(x[-6, ], river) # case 2 #> Error in \"RN\" %in% names(river): object 'river' not found   # }"},{"path":"https://lucarraro.github.io/rivnet/reference/locate_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate site in a river — locate_site","title":"Locate site in a river — locate_site","text":"Finds location site (coordinates X,Y) within river object.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/locate_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate site in a river — locate_site","text":"","code":"locate_site(X, Y, river, euclidean = TRUE, showPlot = FALSE,    xlim = NULL, ylim = NULL)"},{"path":"https://lucarraro.github.io/rivnet/reference/locate_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate site in a river — locate_site","text":"X, Y Longitudinal latitudinal coordinates site. must given coordinate system river object. river River object site located. must aggregated (via aggregate_river). euclidean Logical. location site river attributed \"crow flies\"?  FALSE, downstream path (X, Y) followed river network met. showPlot Logical. close-relocated site shown? xlim, ylim Ranges x- y-axis limits plot. active showPlots = TRUE.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/locate_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate site in a river — locate_site","text":"list objects: FDode index FD level node closest (X, Y). generally node belongs river network. distance distance FDnode RNnode, expressed either Euclidean distance ( euclidean = TRUE), downstream distance alternatively. RNode index RN level relocated site. AGode index AG level relocated site.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/locate_site.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Locate site in a river — locate_site","text":"function identifies node river network (RN AG levels) closest arbitrary site coordinates X, Y. Desired coordinates X, Y can found interactive way clicking river map using  function locator. Nodes RN level thus found can defined new breakpoints reaches (see aggregate_OCN  argument breakpoints).","code":""},{"path":[]},{"path":"https://lucarraro.github.io/rivnet/reference/locate_site.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locate site in a river — locate_site","text":"","code":"# \\donttest{  fp <- system.file(\"extdata/wigger.tif\", package = \"rivnet\")  r <- extract_river(outlet = c(637478, 237413),                     DEM = fp)             #> Error in taudem_exec(n_processes = n_processes, program = \"pitremove\",     args = args, quiet = quiet): ✖ Can't find TauDEM #> ℹ Refer to ?traudem::taudem_sitrep  r <- aggregate_river(r) #> Error in \"slope\" %in% names(OCN$FD): object 'r' not found    X <- 641329; Y <- 227414   locate_site(X, Y, r, showPlot = TRUE) # as the crow flies #> Error in \"RN\" %in% names(river): object 'r' not found  locate_site(X, Y, r, showPlot = TRUE, euclidean = FALSE) # follow downstream path #> Error in \"RN\" %in% names(river): object 'r' not found  # }    if (FALSE) {  # define X, Y by clicking on the map  fp <- system.file(\"extdata/wigger.tif\", package = \"rivnet\")  r <- extract_river(outlet = c(637478, 237413),                     DEM = fp)              r <- aggregate_river(r)  plot(r)    point <- locator(1) # click on the map to define point  locate_site(point$X, point$Y, r)  }"},{"path":"https://lucarraro.github.io/rivnet/reference/path_velocities_river.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate velocities along paths in a river — path_velocities_river","title":"Calculate velocities along paths in a river — path_velocities_river","text":"Calculate mean water velocities along paths river network.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/path_velocities_river.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate velocities along paths in a river — path_velocities_river","text":"","code":"path_velocities_river(river, level = c(\"RN\", \"AG\"),    displayUpdates = FALSE)"},{"path":"https://lucarraro.github.io/rivnet/reference/path_velocities_river.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate velocities along paths in a river — path_velocities_river","text":"river River object. must aggregated (via aggregate_river), contain paths (via paths_river includeDownstreamNode = TRUE)  velocities (via hydro_river rivergeometry_OCN) desired aggregation level(s). See level. level Aggregation level(s) path velocities calculated. Possible values \"RN\", \"AG\", c(\"RN\",\"AG\"). displayUpdates Logical. State updates printed console path_velocities_river runs.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/path_velocities_river.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate velocities along paths in a river — path_velocities_river","text":"river object. following element added list indicated level: pathVelocities spam object. pathVelocities[, j] mean water velocity along downstream path nodes j, null two nodes connected path.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/path_velocities_river.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate velocities along paths in a river — path_velocities_river","text":"Velocities calculated dividing total distance (length downstream path joining two nodes) total time (sum times taken cover nodes origin destination nodes; times calculated length/velocity). Note paths may may include downstream node; controlled option includeDownstreamNode paths_river. Path velocities calculated accordingly.  cases, diagonal entries pathVelocity set equal respective node velocity. See example.","code":""},{"path":[]},{"path":"https://lucarraro.github.io/rivnet/reference/path_velocities_river.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate velocities along paths in a river — path_velocities_river","text":"","code":"# \\donttest{   fp <- system.file(\"extdata/wigger.tif\", package=\"rivnet\") river <- extract_river(outlet=c(637478,237413),                        DEM=fp) #> Error in taudem_exec(n_processes = n_processes, program = \"pitremove\",     args = args, quiet = quiet): ✖ Can't find TauDEM #> ℹ Refer to ?traudem::taudem_sitrep river <- aggregate_river(river) #> Error in \"slope\" %in% names(OCN$FD): object 'river' not found river <- paths_river(river, includePaths = TRUE) #> Error in \"RN\" %in% names(OCN): object 'river' not found river <- OCNet::rivergeometry_OCN(river) # simplified alternative to hydro_river #> Error in \"AG\" %in% names(OCN): object 'river' not found                                   # to attribute velocities at all RN and AG nodes                    river <- path_velocities_river(river, level = \"AG\") # downstream nodes are not included in paths #> Error in \"RN\" %in% names(river): object 'river' not found river$AG$pathVelocities[176, 176]  #> Error in eval(expr, envir, enclos): object 'river' not found river$AG$pathVelocities[176, 174] #> Error in eval(expr, envir, enclos): object 'river' not found  # node 174 is immediately downstream of 176; if downstream nodes are not included   # in paths, the two velocities are equal  river2 <- paths_river(river, includePaths = TRUE, includeDownstreamNode = TRUE) #> Error in \"RN\" %in% names(OCN): object 'river' not found river2 <- path_velocities_river(river2, level = \"AG\") # now downstream nodes are included in paths #> Error in \"RN\" %in% names(river): object 'river2' not found river2$AG$pathVelocities[176, 176]  #> Error in eval(expr, envir, enclos): object 'river2' not found river2$AG$pathVelocities[176, 174] #> Error in eval(expr, envir, enclos): object 'river2' not found  # }"},{"path":"https://lucarraro.github.io/rivnet/reference/paths_river.html","id":null,"dir":"Reference","previous_headings":"","what":"Find paths in a river — paths_river","title":"Find paths in a river — paths_river","text":"Find paths river","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/paths_river.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find paths in a river — paths_river","text":"","code":"paths_river(river, ...)"},{"path":"https://lucarraro.github.io/rivnet/reference/paths_river.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find paths in a river — paths_river","text":"river river object. ... arguments passed aggregate_OCN.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/paths_river.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find paths in a river — paths_river","text":"alias paths_OCN.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/paths_river.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find paths in a river — paths_river","text":"","code":"# \\donttest{  fp <- system.file(\"extdata/wigger.tif\", package=\"rivnet\")  r <- extract_river(outlet=c(637478,237413),   DEM=fp) #> Error in taudem_exec(n_processes = n_processes, program = \"pitremove\",     args = args, quiet = quiet): ✖ Can't find TauDEM #> ℹ Refer to ?traudem::taudem_sitrep r <- aggregate_river(r)   #> Error in \"slope\" %in% names(OCN$FD): object 'r' not found r <- paths_river(r) #> Error in \"RN\" %in% names(OCN): object 'r' not found # }"},{"path":"https://lucarraro.github.io/rivnet/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a river — plot","title":"Plot a river — plot","text":"Plots river object","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a river — plot","text":"","code":"# S4 method for river,numeric plot(x, y, ...) # S4 method for numeric,river plot(x, y, ...) # S4 method for river,missing plot(x, y, ...)"},{"path":"https://lucarraro.github.io/rivnet/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a river — plot","text":"x river object (numeric vector y river). y numeric vector displayed (river x numeric vector).  equivalent theme draw_thematic_OCN. y specified, river must  aggregated. See details. ... Arguments passed plotting functions draw_simple_OCN, draw_contour_OCN,  draw_thematic_OCN. See details.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a river — plot","text":"interface plotting functions draw_simple_OCN, draw_contour_OCN,  draw_thematic_OCN. river object elevation field (.e., generated create_OCN create_general_contour_OCN, landscape_OCN  run), plotting function used draw_simple_OCN. elevation field present, river  aggregated (via aggregate_OCN aggregate_river), plotting function used   draw_contour_OCN. river aggregated,  draw_thematic_OCN used.","code":""},{"path":[]},{"path":"https://lucarraro.github.io/rivnet/reference/plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a river — plot","text":"","code":"fp <- system.file(\"extdata/wigger.tif\", package=\"rivnet\") r <- extract_river(outlet=c(637478,237413),   DEM=fp) #> Error in taudem_exec(n_processes = n_processes, program = \"pitremove\",     args = args, quiet = quiet): ✖ Can't find TauDEM #> ℹ Refer to ?traudem::taudem_sitrep plot(r)  # equivalent to draw_contour_OCN #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'r' not found  # \\donttest{ r <- aggregate_river(r) #> Error in \"slope\" %in% names(OCN$FD): object 'r' not found plot(r) # equivalent to draw_thematic_OCN #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'r' not found  # equivalent to draw_thematic_OCN with 'theme' specified plot(r, r$AG$streamOrder, discreteLevels=TRUE)  #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'r' not found # }"},{"path":"https://lucarraro.github.io/rivnet/reference/river-class.html","id":null,"dir":"Reference","previous_headings":"","what":"river class — river-class","title":"river class — river-class","text":"river object contains information river attributes different aggregation levels. can represent real river network  (obtained via extract_river) optimal channel network (obtained via create_OCN). content river object can treated list. information aggregation levels content  river object, see OCNet-package.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/rivnet-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract And Analyze Rivers From Elevation Data. — rivnet-package","title":"Extract And Analyze Rivers From Elevation Data. — rivnet-package","text":"Seamless extraction river networks Digital      Elevation Models data. package allows analysis      externally provided DEMs downloaded open source      repositories (thus interfacing 'elevatr' package').      Extraction performed via TauDEM's D8 flow direction algorithm      (thus interfacing 'traudem' package). Resulting river     networks compatible functions 'OCNet' package.","code":""},{"path":"https://lucarraro.github.io/rivnet/reference/rivnet-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract And Analyze Rivers From Elevation Data. — rivnet-package","text":"Luca Carraro (luca.carraro@hotmail.)","code":""}]
